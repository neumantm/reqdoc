<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:e5aead29-37fc-4638-8471-1a6398161ea6(de.neumanntim.reqdoc.behavior)" content="root">
  <persistence version="9" />
  <imports>
    <import index="guj1" ref="r:42060899-e009-41eb-8eaf-ea5dc2a669a2(de.neumanntim.reqdoc.structure)" implicit="true" />
    <import index="33ny" ref="6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.util(JDK/)" implicit="true" />
  </imports>
  <registry>
    <language id="af65afd8-f0dd-4942-87d9-63a55f2a9db1" name="jetbrains.mps.lang.behavior">
      <concept id="1225194240794" name="jetbrains.mps.lang.behavior.structure.ConceptBehavior" flags="ng" index="13h7C7">
        <reference id="1225194240799" name="concept" index="13h7C2" />
        <child id="1225194240805" name="method" index="13h7CS" />
        <child id="1225194240801" name="constructor" index="13h7CW" />
      </concept>
      <concept id="1225194413805" name="jetbrains.mps.lang.behavior.structure.ConceptConstructorDeclaration" flags="in" index="13hLZK" />
      <concept id="1225194472830" name="jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration" flags="ng" index="13i0hz">
        <property id="1225194472832" name="isVirtual" index="13i0it" />
      </concept>
      <concept id="1225194691553" name="jetbrains.mps.lang.behavior.structure.ThisNodeExpression" flags="nn" index="13iPFW" />
    </language>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1137021947720" name="jetbrains.mps.baseLanguage.structure.ConceptFunction" flags="in" index="2VMwT0">
        <child id="1137022507850" name="body" index="2VODD2" />
      </concept>
      <concept id="1081236700937" name="jetbrains.mps.baseLanguage.structure.StaticMethodCall" flags="nn" index="2YIFZM">
        <reference id="1144433194310" name="classConcept" index="1Pybhc" />
      </concept>
      <concept id="1068498886292" name="jetbrains.mps.baseLanguage.structure.ParameterDeclaration" flags="ir" index="37vLTG" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123132" name="jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration" flags="ng" index="3clF44">
        <child id="1068580123133" name="returnType" index="3clF45" />
        <child id="1068580123134" name="parameter" index="3clF46" />
        <child id="1068580123135" name="body" index="3clF47" />
      </concept>
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6">
        <child id="1068581517676" name="expression" index="3cqZAk" />
      </concept>
      <concept id="1068581517677" name="jetbrains.mps.baseLanguage.structure.VoidType" flags="in" index="3cqZAl" />
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
        <child id="1068499141038" name="actualArgument" index="37wK5m" />
      </concept>
      <concept id="1178549954367" name="jetbrains.mps.baseLanguage.structure.IVisible" flags="ng" index="1B3ioH">
        <child id="1178549979242" name="visibility" index="1B3o_S" />
      </concept>
      <concept id="1146644602865" name="jetbrains.mps.baseLanguage.structure.PublicVisibility" flags="nn" index="3Tm1VV" />
    </language>
    <language id="aee9cad2-acd4-4608-aef2-0004f6a1cdbd" name="jetbrains.mps.lang.actions">
      <concept id="767145758118872833" name="jetbrains.mps.lang.actions.structure.NF_LinkList_AddNewChildOperation" flags="nn" index="2DeJg1" />
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1177026924588" name="jetbrains.mps.lang.smodel.structure.RefConcept_Reference" flags="nn" index="chp4Y">
        <reference id="1177026940964" name="conceptDeclaration" index="cht4Q" />
      </concept>
      <concept id="2396822768958367367" name="jetbrains.mps.lang.smodel.structure.AbstractTypeCastExpression" flags="nn" index="$5XWr">
        <child id="6733348108486823193" name="leftExpression" index="1m5AlR" />
        <child id="3906496115198199033" name="conceptArgument" index="3oSUPX" />
      </concept>
      <concept id="1139613262185" name="jetbrains.mps.lang.smodel.structure.Node_GetParentOperation" flags="nn" index="1mfA1w" />
      <concept id="1139621453865" name="jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation" flags="nn" index="1mIQ4w">
        <child id="1177027386292" name="conceptArgument" index="cj9EA" />
      </concept>
      <concept id="1140137987495" name="jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression" flags="nn" index="1PxgMI">
        <property id="1238684351431" name="asCast" index="1BlNFB" />
      </concept>
      <concept id="1138055754698" name="jetbrains.mps.lang.smodel.structure.SNodeType" flags="in" index="3Tqbb2">
        <reference id="1138405853777" name="concept" index="ehGHo" />
      </concept>
      <concept id="1138056282393" name="jetbrains.mps.lang.smodel.structure.SLinkListAccess" flags="nn" index="3Tsc0h">
        <reference id="1138056546658" name="link" index="3TtcxE" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="1151689724996" name="jetbrains.mps.baseLanguage.collections.structure.SequenceType" flags="in" index="A3Dl8">
        <child id="1151689745422" name="elementType" index="A3Ik2" />
      </concept>
    </language>
  </registry>
  <node concept="13h7C7" id="1rfxanqcd4l">
    <property role="3GE5qa" value="req.data.relations" />
    <ref role="13h7C2" to="guj1:1rfxanqccTJ" resolve="RequirementList" />
    <node concept="13hLZK" id="1rfxanqcd4m" role="13h7CW">
      <node concept="3clFbS" id="1rfxanqcd4n" role="2VODD2">
        <node concept="3clFbF" id="1rfxanqcd6F" role="3cqZAp">
          <node concept="2OqwBi" id="1rfxanqcdDa" role="3clFbG">
            <node concept="2OqwBi" id="1rfxanqcdgR" role="2Oq$k0">
              <node concept="13iPFW" id="1rfxanqcd6E" role="2Oq$k0" />
              <node concept="3Tsc0h" id="1rfxanqcsMk" role="2OqNvi">
                <ref role="3TtcxE" to="guj1:1rfxanqbZM$" resolve="entries" />
              </node>
            </node>
            <node concept="2DeJg1" id="1rfxanqcdEM" role="2OqNvi" />
          </node>
        </node>
      </node>
    </node>
    <node concept="13i0hz" id="1rfxanqe_4N" role="13h7CS">
      <property role="TrG5h" value="excludedRequirements" />
      <property role="13i0it" value="true" />
      <node concept="3Tm1VV" id="1rfxanqe_4O" role="1B3o_S" />
      <node concept="3clFbS" id="1rfxanqe_4Q" role="3clF47">
        <node concept="3clFbJ" id="1rfxanqeA6k" role="3cqZAp">
          <node concept="2OqwBi" id="1rfxanqeAIK" role="3clFbw">
            <node concept="2OqwBi" id="1rfxanqeAk6" role="2Oq$k0">
              <node concept="13iPFW" id="1rfxanqeA8o" role="2Oq$k0" />
              <node concept="1mfA1w" id="1rfxanqeA_a" role="2OqNvi" />
            </node>
            <node concept="1mIQ4w" id="1rfxanqeAX1" role="2OqNvi">
              <node concept="chp4Y" id="1rfxanqeB2A" role="cj9EA">
                <ref role="cht4Q" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
              </node>
            </node>
          </node>
          <node concept="3clFbS" id="1rfxanqeA6m" role="3clFbx">
            <node concept="3cpWs6" id="1rfxanqeB8l" role="3cqZAp">
              <node concept="2YIFZM" id="1rfxanqeHWR" role="3cqZAk">
                <ref role="37wK5l" to="33ny:~List.of(java.lang.Object)" resolve="of" />
                <ref role="1Pybhc" to="33ny:~List" resolve="List" />
                <node concept="1PxgMI" id="1rfxanqeH6N" role="37wK5m">
                  <property role="1BlNFB" value="true" />
                  <node concept="chp4Y" id="1rfxanqeHks" role="3oSUPX">
                    <ref role="cht4Q" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
                  </node>
                  <node concept="2OqwBi" id="1rfxanqeFPV" role="1m5AlR">
                    <node concept="13iPFW" id="1rfxanqeFxR" role="2Oq$k0" />
                    <node concept="1mfA1w" id="1rfxanqeGbz" role="2OqNvi" />
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
        <node concept="3cpWs6" id="1rfxanqeIq_" role="3cqZAp">
          <node concept="2YIFZM" id="1rfxanqeJf6" role="3cqZAk">
            <ref role="37wK5l" to="33ny:~List.of()" resolve="of" />
            <ref role="1Pybhc" to="33ny:~List" resolve="List" />
          </node>
        </node>
      </node>
      <node concept="A3Dl8" id="1rfxanqeDXk" role="3clF45">
        <node concept="3Tqbb2" id="1rfxanqeE4o" role="A3Ik2">
          <ref role="ehGHo" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
        </node>
      </node>
    </node>
    <node concept="13i0hz" id="1rfxanqs9UA" role="13h7CS">
      <property role="TrG5h" value="onNewTarget" />
      <property role="13i0it" value="true" />
      <node concept="3Tm1VV" id="1rfxanqs9UB" role="1B3o_S" />
      <node concept="3clFbS" id="1rfxanqs9UD" role="3clF47" />
      <node concept="3cqZAl" id="1rfxanqsavp" role="3clF45" />
      <node concept="37vLTG" id="1rfxanqsaP1" role="3clF46">
        <property role="TrG5h" value="newTarget" />
        <node concept="3Tqbb2" id="1rfxanqsaP0" role="1tU5fm">
          <ref role="ehGHo" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
        </node>
      </node>
    </node>
  </node>
</model>

