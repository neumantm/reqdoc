<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:79a08358-5691-4078-9508-9ceaf8fea91f(de.neumanntim.reqdoc.typesystem)" content="root">
  <persistence version="9" />
  <imports>
    <import index="guj1" ref="r:42060899-e009-41eb-8eaf-ea5dc2a669a2(de.neumanntim.reqdoc.structure)" implicit="true" />
    <import index="o2c4" ref="r:e5aead29-37fc-4638-8471-1a6398161ea6(de.neumanntim.reqdoc.behavior)" implicit="true" />
    <import index="tpck" ref="r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)" implicit="true" />
  </imports>
  <registry>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="1154032098014" name="jetbrains.mps.baseLanguage.structure.AbstractLoopStatement" flags="nn" index="2LF5Ji">
        <child id="1154032183016" name="body" index="2LFqv$" />
      </concept>
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068581242875" name="jetbrains.mps.baseLanguage.structure.PlusExpression" flags="nn" index="3cpWs3" />
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1081516740877" name="jetbrains.mps.baseLanguage.structure.NotExpression" flags="nn" index="3fqX7Q">
        <child id="1081516765348" name="expression" index="3fr31v" />
      </concept>
      <concept id="1204053956946" name="jetbrains.mps.baseLanguage.structure.IMethodCall" flags="ng" index="1ndlxa">
        <reference id="1068499141037" name="baseMethodDeclaration" index="37wK5l" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="1144226303539" name="jetbrains.mps.baseLanguage.structure.ForeachStatement" flags="nn" index="1DcWWT">
        <child id="1144226360166" name="iterable" index="1DdaDG" />
      </concept>
      <concept id="1144230876926" name="jetbrains.mps.baseLanguage.structure.AbstractForStatement" flags="nn" index="1DupvO">
        <child id="1144230900587" name="variable" index="1Duv9x" />
      </concept>
    </language>
    <language id="7a5dda62-9140-4668-ab76-d5ed1746f2b2" name="jetbrains.mps.lang.typesystem">
      <concept id="1175517767210" name="jetbrains.mps.lang.typesystem.structure.ReportErrorStatement" flags="nn" index="2MkqsV">
        <child id="1175517851849" name="errorString" index="2MkJ7o" />
      </concept>
      <concept id="1195213580585" name="jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule" flags="ig" index="18hYwZ">
        <child id="1195213635060" name="body" index="18ibNy" />
      </concept>
      <concept id="1195214364922" name="jetbrains.mps.lang.typesystem.structure.NonTypesystemRule" flags="ig" index="18kY7G" />
      <concept id="3937244445246642777" name="jetbrains.mps.lang.typesystem.structure.AbstractReportStatement" flags="ng" index="1urrMJ">
        <child id="3937244445246643221" name="helginsIntention" index="1urrFz" />
        <child id="3937244445246642781" name="nodeToReport" index="1urrMF" />
      </concept>
      <concept id="1210784285454" name="jetbrains.mps.lang.typesystem.structure.TypesystemIntention" flags="ng" index="3Cnw8n">
        <reference id="1216388525179" name="quickFix" index="QpYPw" />
        <child id="1210784493590" name="actualArgument" index="3Coj4f" />
      </concept>
      <concept id="1210784384552" name="jetbrains.mps.lang.typesystem.structure.TypesystemIntentionArgument" flags="ng" index="3CnSsL">
        <reference id="1216386999476" name="quickFixArgument" index="QkamJ" />
        <child id="1210784642750" name="value" index="3CoRuB" />
      </concept>
      <concept id="1174642788531" name="jetbrains.mps.lang.typesystem.structure.ConceptReference" flags="ig" index="1YaCAy">
        <reference id="1174642800329" name="concept" index="1YaFvo" />
      </concept>
      <concept id="1174648085619" name="jetbrains.mps.lang.typesystem.structure.AbstractRule" flags="ng" index="1YuPPy">
        <child id="1174648101952" name="applicableNode" index="1YuTPh" />
      </concept>
      <concept id="1174650418652" name="jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference" flags="nn" index="1YBJjd">
        <reference id="1174650432090" name="applicableNode" index="1YBMHb" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1177026924588" name="jetbrains.mps.lang.smodel.structure.RefConcept_Reference" flags="nn" index="chp4Y">
        <reference id="1177026940964" name="conceptDeclaration" index="cht4Q" />
      </concept>
      <concept id="1138411891628" name="jetbrains.mps.lang.smodel.structure.SNodeOperation" flags="nn" index="eCIE_">
        <child id="1144104376918" name="parameter" index="1xVPHs" />
      </concept>
      <concept id="1179409122411" name="jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall" flags="nn" index="2qgKlT" />
      <concept id="1171407110247" name="jetbrains.mps.lang.smodel.structure.Node_GetAncestorOperation" flags="nn" index="2Xjw5R" />
      <concept id="1144101972840" name="jetbrains.mps.lang.smodel.structure.OperationParm_Concept" flags="ng" index="1xMEDy">
        <child id="1207343664468" name="conceptArgument" index="ri$Ld" />
      </concept>
      <concept id="1138055754698" name="jetbrains.mps.lang.smodel.structure.SNodeType" flags="in" index="3Tqbb2">
        <reference id="1138405853777" name="concept" index="ehGHo" />
      </concept>
      <concept id="1138056022639" name="jetbrains.mps.lang.smodel.structure.SPropertyAccess" flags="nn" index="3TrcHB">
        <reference id="1138056395725" name="property" index="3TsBF5" />
      </concept>
      <concept id="1138056143562" name="jetbrains.mps.lang.smodel.structure.SLinkAccess" flags="nn" index="3TrEf2">
        <reference id="1138056516764" name="link" index="3Tt5mk" />
      </concept>
      <concept id="1138056282393" name="jetbrains.mps.lang.smodel.structure.SLinkListAccess" flags="nn" index="3Tsc0h">
        <reference id="1138056546658" name="link" index="3TtcxE" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="540871147943773365" name="jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation" flags="nn" index="25WWJ4">
        <child id="540871147943773366" name="argument" index="25WWJ7" />
      </concept>
      <concept id="1172254888721" name="jetbrains.mps.baseLanguage.collections.structure.ContainsOperation" flags="nn" index="3JPx81" />
    </language>
  </registry>
  <node concept="18kY7G" id="1rfxanqobhI">
    <property role="TrG5h" value="check_RequirementConflict" />
    <property role="3GE5qa" value="req.data.relations" />
    <node concept="3clFbS" id="1rfxanqobhJ" role="18ibNy">
      <node concept="3cpWs8" id="1rfxanqp$70" role="3cqZAp">
        <node concept="3cpWsn" id="1rfxanqp$71" role="3cpWs9">
          <property role="TrG5h" value="requirement" />
          <node concept="3Tqbb2" id="1rfxanqp$3H" role="1tU5fm">
            <ref role="ehGHo" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
          </node>
          <node concept="2OqwBi" id="1rfxanqp$72" role="33vP2m">
            <node concept="1YBJjd" id="1rfxanqp$73" role="2Oq$k0">
              <ref role="1YBMHb" node="1rfxanqobhL" resolve="requirementConflict" />
            </node>
            <node concept="2Xjw5R" id="1rfxanqp$74" role="2OqNvi">
              <node concept="1xMEDy" id="1rfxanqp$75" role="1xVPHs">
                <node concept="chp4Y" id="1rfxanqp$76" role="ri$Ld">
                  <ref role="cht4Q" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
      <node concept="1DcWWT" id="1rfxanqobuY" role="3cqZAp">
        <node concept="3cpWsn" id="1rfxanqobuZ" role="1Duv9x">
          <property role="TrG5h" value="entry" />
          <node concept="3Tqbb2" id="1rfxanqodKo" role="1tU5fm">
            <ref role="ehGHo" to="guj1:1rfxanqbXPI" resolve="RequirementListEntry" />
          </node>
        </node>
        <node concept="2OqwBi" id="1rfxanqoc1L" role="1DdaDG">
          <node concept="1YBJjd" id="1rfxanqobGg" role="2Oq$k0">
            <ref role="1YBMHb" node="1rfxanqobhL" resolve="requirementConflict" />
          </node>
          <node concept="3Tsc0h" id="1rfxanqocoW" role="2OqNvi">
            <ref role="3TtcxE" to="guj1:1rfxanqbZM$" resolve="entries" />
          </node>
        </node>
        <node concept="3clFbS" id="1rfxanqobv1" role="2LFqv$">
          <node concept="3clFbJ" id="1rfxanqohmy" role="3cqZAp">
            <node concept="3fqX7Q" id="1rfxanqp_AW" role="3clFbw">
              <node concept="2OqwBi" id="1rfxanqp_AY" role="3fr31v">
                <node concept="2OqwBi" id="1rfxanqp_AZ" role="2Oq$k0">
                  <node concept="2OqwBi" id="1rfxanqp_B0" role="2Oq$k0">
                    <node concept="37vLTw" id="1rfxanqp_B1" role="2Oq$k0">
                      <ref role="3cqZAo" node="1rfxanqobuZ" resolve="entry" />
                    </node>
                    <node concept="3TrEf2" id="1rfxanqp_B2" role="2OqNvi">
                      <ref role="3Tt5mk" to="guj1:1rfxanqckMp" resolve="requirement" />
                    </node>
                  </node>
                  <node concept="2qgKlT" id="1rfxanqp_B3" role="2OqNvi">
                    <ref role="37wK5l" to="o2c4:1rfxanqoiOS" resolve="getConflicts" />
                  </node>
                </node>
                <node concept="3JPx81" id="1rfxanqp_B4" role="2OqNvi">
                  <node concept="37vLTw" id="1rfxanqp_B5" role="25WWJ7">
                    <ref role="3cqZAo" node="1rfxanqp$71" resolve="requirement" />
                  </node>
                </node>
              </node>
            </node>
            <node concept="3clFbS" id="1rfxanqohm$" role="3clFbx">
              <node concept="2MkqsV" id="1rfxanqp_Lj" role="3cqZAp">
                <node concept="3cpWs3" id="1rfxanqpCC7" role="2MkJ7o">
                  <node concept="Xl_RD" id="1rfxanqpCDl" role="3uHU7w">
                    <property role="Xl_RC" value=" it should also be the case the other way around" />
                  </node>
                  <node concept="3cpWs3" id="1rfxanqpBRo" role="3uHU7B">
                    <node concept="3cpWs3" id="1rfxanqpBak" role="3uHU7B">
                      <node concept="3cpWs3" id="1rfxanqpAFP" role="3uHU7B">
                        <node concept="Xl_RD" id="1rfxanqp_NV" role="3uHU7B">
                          <property role="Xl_RC" value="If " />
                        </node>
                        <node concept="2OqwBi" id="1rfxanqpDf5" role="3uHU7w">
                          <node concept="37vLTw" id="1rfxanqpAIz" role="2Oq$k0">
                            <ref role="3cqZAo" node="1rfxanqp$71" resolve="requirement" />
                          </node>
                          <node concept="3TrcHB" id="1rfxanqpDj3" role="2OqNvi">
                            <ref role="3TsBF5" to="tpck:h0TrG11" resolve="name" />
                          </node>
                        </node>
                      </node>
                      <node concept="Xl_RD" id="1rfxanqpBaU" role="3uHU7w">
                        <property role="Xl_RC" value="is in conflict with " />
                      </node>
                    </node>
                    <node concept="2OqwBi" id="1rfxanqpDrB" role="3uHU7w">
                      <node concept="2OqwBi" id="1rfxanqpCdH" role="2Oq$k0">
                        <node concept="37vLTw" id="1rfxanqpC5i" role="2Oq$k0">
                          <ref role="3cqZAo" node="1rfxanqobuZ" resolve="entry" />
                        </node>
                        <node concept="3TrEf2" id="1rfxanqpCy6" role="2OqNvi">
                          <ref role="3Tt5mk" to="guj1:1rfxanqckMp" resolve="requirement" />
                        </node>
                      </node>
                      <node concept="3TrcHB" id="1rfxanqpDNx" role="2OqNvi">
                        <ref role="3TsBF5" to="tpck:h0TrG11" resolve="name" />
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="37vLTw" id="1rfxanqqIBK" role="1urrMF">
                  <ref role="3cqZAo" node="1rfxanqobuZ" resolve="entry" />
                </node>
                <node concept="3Cnw8n" id="1rfxanqpDZh" role="1urrFz">
                  <ref role="QpYPw" node="1rfxanqpDZe" resolve="fix_" />
                  <node concept="3CnSsL" id="1rfxanqqyzp" role="3Coj4f">
                    <ref role="QkamJ" node="1rfxanqpFhS" resolve="requirementThatAlreadyHasTheConflict" />
                    <node concept="37vLTw" id="1rfxanqqy_e" role="3CoRuB">
                      <ref role="3cqZAo" node="1rfxanqp$71" resolve="requirement" />
                    </node>
                  </node>
                  <node concept="3CnSsL" id="1rfxanqqy_F" role="3Coj4f">
                    <ref role="QkamJ" node="1rfxanqpFil" resolve="requirementThatIsMissingTheConflict" />
                    <node concept="2OqwBi" id="1rfxanqqyOj" role="3CoRuB">
                      <node concept="37vLTw" id="1rfxanqqyE9" role="2Oq$k0">
                        <ref role="3cqZAo" node="1rfxanqobuZ" resolve="entry" />
                      </node>
                      <node concept="3TrEf2" id="1rfxanqqz3N" role="2OqNvi">
                        <ref role="3Tt5mk" to="guj1:1rfxanqckMp" resolve="requirement" />
                      </node>
                    </node>
                  </node>
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node concept="1YaCAy" id="1rfxanqobhL" role="1YuTPh">
      <property role="TrG5h" value="requirementConflict" />
      <ref role="1YaFvo" to="guj1:1rfxanqbX8Z" resolve="RequirementConflict" />
    </node>
  </node>
</model>

