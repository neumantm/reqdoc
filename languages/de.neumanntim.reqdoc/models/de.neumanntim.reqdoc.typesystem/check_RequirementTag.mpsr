<?xml version="1.0" encoding="UTF-8"?>
<model ref="r:79a08358-5691-4078-9508-9ceaf8fea91f(de.neumanntim.reqdoc.typesystem)" content="root">
  <persistence version="9" />
  <imports>
    <import index="guj1" ref="r:42060899-e009-41eb-8eaf-ea5dc2a669a2(de.neumanntim.reqdoc.structure)" implicit="true" />
  </imports>
  <registry>
    <language id="f3061a53-9226-4cc5-a443-f952ceaf5816" name="jetbrains.mps.baseLanguage">
      <concept id="4836112446988635817" name="jetbrains.mps.baseLanguage.structure.UndefinedType" flags="in" index="2jxLKc" />
      <concept id="1197027756228" name="jetbrains.mps.baseLanguage.structure.DotExpression" flags="nn" index="2OqwBi">
        <child id="1197027771414" name="operand" index="2Oq$k0" />
        <child id="1197027833540" name="operation" index="2OqNvi" />
      </concept>
      <concept id="1070475926800" name="jetbrains.mps.baseLanguage.structure.StringLiteral" flags="nn" index="Xl_RD">
        <property id="1070475926801" name="value" index="Xl_RC" />
      </concept>
      <concept id="1068431474542" name="jetbrains.mps.baseLanguage.structure.VariableDeclaration" flags="ng" index="33uBYm">
        <child id="1068431790190" name="initializer" index="33vP2m" />
      </concept>
      <concept id="1068498886296" name="jetbrains.mps.baseLanguage.structure.VariableReference" flags="nn" index="37vLTw">
        <reference id="1068581517664" name="variableDeclaration" index="3cqZAo" />
      </concept>
      <concept id="1225271283259" name="jetbrains.mps.baseLanguage.structure.NPEEqualsExpression" flags="nn" index="17R0WA" />
      <concept id="4972933694980447171" name="jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration" flags="ng" index="19Szcq">
        <child id="5680397130376446158" name="type" index="1tU5fm" />
      </concept>
      <concept id="1068580123155" name="jetbrains.mps.baseLanguage.structure.ExpressionStatement" flags="nn" index="3clFbF">
        <child id="1068580123156" name="expression" index="3clFbG" />
      </concept>
      <concept id="1068580123159" name="jetbrains.mps.baseLanguage.structure.IfStatement" flags="nn" index="3clFbJ">
        <child id="1068580123160" name="condition" index="3clFbw" />
        <child id="1068580123161" name="ifTrue" index="3clFbx" />
      </concept>
      <concept id="1068580123136" name="jetbrains.mps.baseLanguage.structure.StatementList" flags="sn" stub="5293379017992965193" index="3clFbS">
        <child id="1068581517665" name="statement" index="3cqZAp" />
      </concept>
      <concept id="1068581242875" name="jetbrains.mps.baseLanguage.structure.PlusExpression" flags="nn" index="3cpWs3" />
      <concept id="1068581242878" name="jetbrains.mps.baseLanguage.structure.ReturnStatement" flags="nn" index="3cpWs6" />
      <concept id="1068581242864" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement" flags="nn" index="3cpWs8">
        <child id="1068581242865" name="localVariableDeclaration" index="3cpWs9" />
      </concept>
      <concept id="1068581242863" name="jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration" flags="nr" index="3cpWsn" />
      <concept id="1081516740877" name="jetbrains.mps.baseLanguage.structure.NotExpression" flags="nn" index="3fqX7Q">
        <child id="1081516765348" name="expression" index="3fr31v" />
      </concept>
      <concept id="1081773326031" name="jetbrains.mps.baseLanguage.structure.BinaryOperation" flags="nn" index="3uHJSO">
        <child id="1081773367579" name="rightExpression" index="3uHU7w" />
        <child id="1081773367580" name="leftExpression" index="3uHU7B" />
      </concept>
      <concept id="1073239437375" name="jetbrains.mps.baseLanguage.structure.NotEqualsExpression" flags="nn" index="3y3z36" />
      <concept id="1080120340718" name="jetbrains.mps.baseLanguage.structure.AndExpression" flags="nn" index="1Wc70l" />
    </language>
    <language id="fd392034-7849-419d-9071-12563d152375" name="jetbrains.mps.baseLanguage.closures">
      <concept id="1199569711397" name="jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral" flags="nn" index="1bVj0M">
        <child id="1199569906740" name="parameter" index="1bW2Oz" />
        <child id="1199569916463" name="body" index="1bW5cS" />
      </concept>
    </language>
    <language id="7a5dda62-9140-4668-ab76-d5ed1746f2b2" name="jetbrains.mps.lang.typesystem">
      <concept id="1175517767210" name="jetbrains.mps.lang.typesystem.structure.ReportErrorStatement" flags="nn" index="2MkqsV">
        <child id="1175517851849" name="errorString" index="2MkJ7o" />
      </concept>
      <concept id="1195213580585" name="jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule" flags="ig" index="18hYwZ">
        <child id="1195213635060" name="body" index="18ibNy" />
      </concept>
      <concept id="1195214364922" name="jetbrains.mps.lang.typesystem.structure.NonTypesystemRule" flags="ig" index="18kY7G" />
      <concept id="3937244445246642777" name="jetbrains.mps.lang.typesystem.structure.AbstractReportStatement" flags="ng" index="1urrMJ">
        <child id="3937244445246642781" name="nodeToReport" index="1urrMF" />
      </concept>
      <concept id="1174642788531" name="jetbrains.mps.lang.typesystem.structure.ConceptReference" flags="ig" index="1YaCAy">
        <reference id="1174642800329" name="concept" index="1YaFvo" />
      </concept>
      <concept id="1174648085619" name="jetbrains.mps.lang.typesystem.structure.AbstractRule" flags="ng" index="1YuPPy">
        <child id="1174648101952" name="applicableNode" index="1YuTPh" />
      </concept>
      <concept id="1174650418652" name="jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference" flags="nn" index="1YBJjd">
        <reference id="1174650432090" name="applicableNode" index="1YBMHb" />
      </concept>
    </language>
    <language id="7866978e-a0f0-4cc7-81bc-4d213d9375e1" name="jetbrains.mps.lang.smodel">
      <concept id="1177026924588" name="jetbrains.mps.lang.smodel.structure.RefConcept_Reference" flags="nn" index="chp4Y">
        <reference id="1177026940964" name="conceptDeclaration" index="cht4Q" />
      </concept>
      <concept id="4693937538533521280" name="jetbrains.mps.lang.smodel.structure.OfConceptOperation" flags="ng" index="v3k3i">
        <child id="4693937538533538124" name="requestedConcept" index="v3oSu" />
      </concept>
      <concept id="2396822768958367367" name="jetbrains.mps.lang.smodel.structure.AbstractTypeCastExpression" flags="nn" index="$5XWr">
        <child id="6733348108486823193" name="leftExpression" index="1m5AlR" />
        <child id="3906496115198199033" name="conceptArgument" index="3oSUPX" />
      </concept>
      <concept id="1139613262185" name="jetbrains.mps.lang.smodel.structure.Node_GetParentOperation" flags="nn" index="1mfA1w" />
      <concept id="1139621453865" name="jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation" flags="nn" index="1mIQ4w">
        <child id="1177027386292" name="conceptArgument" index="cj9EA" />
      </concept>
      <concept id="1140137987495" name="jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression" flags="nn" index="1PxgMI">
        <property id="1238684351431" name="asCast" index="1BlNFB" />
      </concept>
      <concept id="1138055754698" name="jetbrains.mps.lang.smodel.structure.SNodeType" flags="in" index="3Tqbb2">
        <reference id="1138405853777" name="concept" index="ehGHo" />
      </concept>
      <concept id="1138056022639" name="jetbrains.mps.lang.smodel.structure.SPropertyAccess" flags="nn" index="3TrcHB">
        <reference id="1138056395725" name="property" index="3TsBF5" />
      </concept>
      <concept id="1138056282393" name="jetbrains.mps.lang.smodel.structure.SLinkListAccess" flags="nn" index="3Tsc0h">
        <reference id="1138056546658" name="link" index="3TtcxE" />
      </concept>
    </language>
    <language id="ceab5195-25ea-4f22-9b92-103b95ca8c0c" name="jetbrains.mps.lang.core">
      <concept id="1133920641626" name="jetbrains.mps.lang.core.structure.BaseConcept" flags="ng" index="2VYdi">
        <property id="1193676396447" name="virtualPackage" index="3GE5qa" />
      </concept>
      <concept id="1169194658468" name="jetbrains.mps.lang.core.structure.INamedConcept" flags="ng" index="TrEIO">
        <property id="1169194664001" name="name" index="TrG5h" />
      </concept>
    </language>
    <language id="83888646-71ce-4f1c-9c53-c54016f6ad4f" name="jetbrains.mps.baseLanguage.collections">
      <concept id="1204796164442" name="jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation" flags="nn" index="23sCx2">
        <child id="1204796294226" name="closure" index="23t8la" />
      </concept>
      <concept id="1203518072036" name="jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration" flags="ig" index="Rh6nW" />
      <concept id="1202120902084" name="jetbrains.mps.baseLanguage.collections.structure.WhereOperation" flags="nn" index="3zZkjj" />
      <concept id="1176501494711" name="jetbrains.mps.baseLanguage.collections.structure.IsNotEmptyOperation" flags="nn" index="3GX2aA" />
    </language>
  </registry>
  <node concept="18kY7G" id="1rfxanqhP9e">
    <property role="TrG5h" value="check_RequirementTag" />
    <property role="3GE5qa" value="req.data" />
    <node concept="3clFbS" id="1rfxanqhP9f" role="18ibNy">
      <node concept="3clFbJ" id="1rfxanqhPcb" role="3cqZAp">
        <node concept="3fqX7Q" id="1rfxanqhQeC" role="3clFbw">
          <node concept="2OqwBi" id="1rfxanqhQeE" role="3fr31v">
            <node concept="2OqwBi" id="1rfxanqhQeF" role="2Oq$k0">
              <node concept="1YBJjd" id="1rfxanqhQeG" role="2Oq$k0">
                <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
              </node>
              <node concept="1mfA1w" id="1rfxanqhQeH" role="2OqNvi" />
            </node>
            <node concept="1mIQ4w" id="1rfxanqhQeI" role="2OqNvi">
              <node concept="chp4Y" id="1rfxanqhQeJ" role="cj9EA">
                <ref role="cht4Q" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
              </node>
            </node>
          </node>
        </node>
        <node concept="3clFbS" id="1rfxanqhPcd" role="3clFbx">
          <node concept="3cpWs6" id="1rfxanqhQhT" role="3cqZAp" />
        </node>
      </node>
      <node concept="3cpWs8" id="1rfxanqhRhU" role="3cqZAp">
        <node concept="3cpWsn" id="1rfxanqhRhV" role="3cpWs9">
          <property role="TrG5h" value="req" />
          <node concept="3Tqbb2" id="1rfxanqhR9D" role="1tU5fm">
            <ref role="ehGHo" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
          </node>
          <node concept="1PxgMI" id="1rfxanqhRhW" role="33vP2m">
            <property role="1BlNFB" value="true" />
            <node concept="chp4Y" id="1rfxanqhRhX" role="3oSUPX">
              <ref role="cht4Q" to="guj1:4mUjq4Wq38s" resolve="Requirement" />
            </node>
            <node concept="2OqwBi" id="1rfxanqhRhY" role="1m5AlR">
              <node concept="1YBJjd" id="1rfxanqhRhZ" role="2Oq$k0">
                <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
              </node>
              <node concept="1mfA1w" id="1rfxanqhRi0" role="2OqNvi" />
            </node>
          </node>
        </node>
      </node>
      <node concept="3clFbJ" id="1rfxanqhRwU" role="3cqZAp">
        <node concept="3clFbS" id="1rfxanqhRwW" role="3clFbx">
          <node concept="2MkqsV" id="1rfxanqi0Lg" role="3cqZAp">
            <node concept="3cpWs3" id="1rfxanqi1KJ" role="2MkJ7o">
              <node concept="2OqwBi" id="1rfxanqi23r" role="3uHU7w">
                <node concept="1YBJjd" id="1rfxanqi1OF" role="2Oq$k0">
                  <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
                </node>
                <node concept="3TrcHB" id="1rfxanqi2T7" role="2OqNvi">
                  <ref role="3TsBF5" to="guj1:1rfxanqhyRv" resolve="name" />
                </node>
              </node>
              <node concept="Xl_RD" id="1rfxanqi0Mk" role="3uHU7B">
                <property role="Xl_RC" value="Duplicate tag: " />
              </node>
            </node>
            <node concept="1YBJjd" id="1rfxanqi3cg" role="1urrMF">
              <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
            </node>
          </node>
        </node>
        <node concept="2OqwBi" id="1rfxanqi3x8" role="3clFbw">
          <node concept="2OqwBi" id="1rfxanqhVgO" role="2Oq$k0">
            <node concept="2OqwBi" id="1rfxanqhTj0" role="2Oq$k0">
              <node concept="2OqwBi" id="1rfxanqhRHJ" role="2Oq$k0">
                <node concept="37vLTw" id="1rfxanqhRz3" role="2Oq$k0">
                  <ref role="3cqZAo" node="1rfxanqhRhV" resolve="req" />
                </node>
                <node concept="3Tsc0h" id="1rfxanqhRU4" role="2OqNvi">
                  <ref role="3TtcxE" to="guj1:4mUjq4Wqu2B" resolve="data" />
                </node>
              </node>
              <node concept="v3k3i" id="1rfxanqhUHZ" role="2OqNvi">
                <node concept="chp4Y" id="1rfxanqhV0n" role="v3oSu">
                  <ref role="cht4Q" to="guj1:1rfxanqhyC0" resolve="RequirementTag" />
                </node>
              </node>
            </node>
            <node concept="3zZkjj" id="1rfxanqhVGr" role="2OqNvi">
              <node concept="1bVj0M" id="1rfxanqhVGt" role="23t8la">
                <node concept="3clFbS" id="1rfxanqhVGu" role="1bW5cS">
                  <node concept="3clFbF" id="1rfxanqhVP0" role="3cqZAp">
                    <node concept="1Wc70l" id="1rfxanqhXwl" role="3clFbG">
                      <node concept="17R0WA" id="1rfxanqhZzj" role="3uHU7w">
                        <node concept="2OqwBi" id="1rfxanqi0uH" role="3uHU7w">
                          <node concept="1YBJjd" id="1rfxanqi0fA" role="2Oq$k0">
                            <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
                          </node>
                          <node concept="3TrcHB" id="1rfxanqi0Ck" role="2OqNvi">
                            <ref role="3TsBF5" to="guj1:1rfxanqhyRv" resolve="name" />
                          </node>
                        </node>
                        <node concept="2OqwBi" id="1rfxanqhXYq" role="3uHU7B">
                          <node concept="37vLTw" id="1rfxanqhXBR" role="2Oq$k0">
                            <ref role="3cqZAo" node="1rfxanqhVGv" resolve="it" />
                          </node>
                          <node concept="3TrcHB" id="1rfxanqhYmb" role="2OqNvi">
                            <ref role="3TsBF5" to="guj1:1rfxanqhyRv" resolve="name" />
                          </node>
                        </node>
                      </node>
                      <node concept="3y3z36" id="1rfxanqhWbi" role="3uHU7B">
                        <node concept="37vLTw" id="1rfxanqhVOZ" role="3uHU7B">
                          <ref role="3cqZAo" node="1rfxanqhVGv" resolve="it" />
                        </node>
                        <node concept="1YBJjd" id="1rfxanqhWwE" role="3uHU7w">
                          <ref role="1YBMHb" node="1rfxanqhP9h" resolve="requirementTag" />
                        </node>
                      </node>
                    </node>
                  </node>
                </node>
                <node concept="Rh6nW" id="1rfxanqhVGv" role="1bW2Oz">
                  <property role="TrG5h" value="it" />
                  <node concept="2jxLKc" id="1rfxanqhVGw" role="1tU5fm" />
                </node>
              </node>
            </node>
          </node>
          <node concept="3GX2aA" id="1rfxanqi4$D" role="2OqNvi" />
        </node>
      </node>
    </node>
    <node concept="1YaCAy" id="1rfxanqhP9h" role="1YuTPh">
      <property role="TrG5h" value="requirementTag" />
      <ref role="1YaFvo" to="guj1:1rfxanqhyC0" resolve="RequirementTag" />
    </node>
  </node>
</model>

